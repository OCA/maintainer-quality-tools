#!/bin/bash

set -e

if [ "${LINT_CHECK}" != "0" ]; then
    pip install -q flake8 Click pylint-mccabe

    # Install pylint plugin depends without lxml
    wget -q https://raw.githubusercontent.com/OCA/pylint-odoo/master/requirements.txt -O ${HOME}/maintainer-quality-tools/travis/pylint_odoo_requirements.txt
    find -L ${HOME}/maintainer-quality-tools/travis -name pylint_odoo_requirements.txt -exec sed -i '/lxml/d'  {} \;  #  lxml depends is too slow
    pip install --upgrade -r ${HOME}/maintainer-quality-tools/travis/pylint_odoo_requirements.txt
    pip install --upgrade --pre --no-deps git+https://github.com/OCA/pylint-odoo.git   # To use last version ever
    npm install -g jshint  # Extra package for pylint-odoo plugin
    exit 0
fi

# We can exit here and do nothing if this only a LINT check
if [ "${TESTS}" != "1" ] && [ "${LINT_CHECK}" == "1" ]; then
    exit 0
fi


# Install less
ln -s `which nodejs` $HOME/maintainer-quality-tools/travis/node
npm install -g less less-plugin-clean-css


# For backward compatibility, take version from parameter if it's not globally set
if [ "x${VERSION}" == "x" ] ; then
    VERSION="${1}"
    echo "WARNING: no env variable set for VERSION. Using '${1}'."
fi

: ${ODOO_REPO:="odoo/odoo"}  # default value, if not set
IFS="/" read -a REPO <<< "${ODOO_REPO}"
ODOO_URL="https://github.com/${REPO[0]}/${REPO[1]}/archive/${VERSION}.tar.gz"

echo "Installing Odoo ${ODOO_URL}"
wget -nv -O odoo.tar.gz ${ODOO_URL}
tar -xf odoo.tar.gz -C ${HOME}

# Workaround to force using system site packages (see https://github.com/Shippable/support/issues/241#issuecomment-57947925)
rm -f $VIRTUAL_ENV/lib/python2.7/no-global-site-packages.txt

pip install --user -q -r $(dirname ${BASH_SOURCE[0]})/requirements.txt
pip install -q QUnitSuite coveralls

# Use reference .coveragerc
cp ${HOME}/maintainer-quality-tools/cfg/.coveragerc .

echo "Getting addons dependencies"
clone_oca_dependencies
clone_result=$?
if [ "$clone_result" != "0"  ]; then
    echo "Error cloning dependencies"
    exit $clone_result
fi;

# Expected directory structure:
#
#    HOME/
#     |___ <OdooRepo>-<Branch>/         <-- Odoo Server
#     |___ maintainer-quality-tools/
#     |___ build/<Owner>/<TestedRepo>/
#     |___ dependencies/<DependencyRepo1>/
#     |___ dependencies/<DependencyRepo2>/
#     |...
echo "Content of ${HOME}:"
ls -l ${HOME}

echo "Content of ${HOME}/dependencies:"
mkdir -p ${HOME}/dependencies/odoolint-repo/
cp -r ${HOME}/maintainer-quality-tools/odoolint ${HOME}/dependencies/odoolint-repo/
ls -l ${HOME}/dependencies

set +e
