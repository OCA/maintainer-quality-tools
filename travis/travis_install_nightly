#!/bin/bash

if [ "x${WITHOUT_ODOO}" == "x" ] ; then
    echo "Installing Odoo ${ODOO_URL}"

    # For backward compatibility, take version from parameter if it's not globally set
    if [ "x${VERSION}" == "x" ] ; then
        VERSION="${1}"
        echo "WARNING: no env variable set for VERSION. Using '${1}'."
    fi

    : ${ODOO_REPO:="odoo/odoo"}  # default value, if not set
    IFS="/" read -a REPO <<< "${ODOO_REPO}"
    ODOO_URL="https://github.com/${REPO[0]}/${REPO[1]}/archive/${VERSION}.tar.gz"

    wget -q -O odoo.tar.gz ${ODOO_URL}
    tar -xf odoo.tar.gz -C ${HOME}
fi

if [ "x${WITHOUT_DEPENDENCIES}" == "x" ] ; then
    echo "Installing dependencies"
    sudo apt-get -q -y install expect-dev  # provides unbuffer utility
    sudo apt-get -q -y install python-lxml  # because pip installation is slooow

    pip install -q QUnitSuite flake8 coveralls pylint
    pip install -q -r $(dirname ${BASH_SOURCE[0]})/requirements.txt
fi

if [ "${SHIPPABLE}" == "true" ] ; then
    echo "Installing for shippable"
    $(dirname ${BASH_SOURCE[0]})/shippable_install_nightly
fi
# Use reference .coveragerc
cp ${HOME}/maintainer-quality-tools/cfg/.coveragerc .

# Expected directory structure:
#
#    HOME/
#     |___ <OdooRepo>-<Branch>/         <-- Odoo Server
#     |___ maintainer-quality-tools/
#     |___ build/<Owner>/<TestedRepo>/
#     |___ <DependencyRepo1>/
#     |___ <DependencyRepo2>/
#     |...
echo "Content of ${HOME}:"
ls -l ${HOME}
