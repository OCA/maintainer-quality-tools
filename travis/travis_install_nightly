#!/bin/bash

pip install -q QUnitSuite flake8 coveralls pylint > /dev/null 2>&1

# We can exit here and do nothing if this only a LINT check
if [ "${LINT_CHECK}" == "1" ] ; then
    exit 0
fi

# For backward compatibility, take version from parameter if it's not globally set
if [ "x${VERSION}" == "x" ] ; then
    VERSION="${1}"
    echo "WARNING: no env variable set for VERSION. Using '${1}'."
fi

: ${ODOO_REPO:="odoo/odoo"}  # default value, if not set
IFS="/" read -a REPO <<< "${ODOO_REPO}"
ODOO_URL="https://github.com/${REPO[0]}/${REPO[1]}/archive/${VERSION}.tar.gz"

echo "Installing Odoo ${ODOO_URL}"
wget -nv -O odoo.tar.gz ${ODOO_URL}
tar -xf odoo.tar.gz -C ${HOME}

# Workaround to force using system site packages (see https://github.com/Shippable/support/issues/241#issuecomment-57947925)
rm -f $VIRTUAL_ENV/lib/python2.7/no-global-site-packages.txt

pip install --user -q -r $(dirname ${BASH_SOURCE[0]})/requirements.txt

# Use reference .coveragerc
cp ${HOME}/maintainer-quality-tools/cfg/.coveragerc .

echo "Getting dependencies"
clone_oca_dependencies

# Expected directory structure:
#
#    HOME/
#     |___ <OdooRepo>-<Branch>/         <-- Odoo Server
#     |___ maintainer-quality-tools/
#     |___ build/<Owner>/<TestedRepo>/
#     |___ <DependencyRepo1>/
#     |___ <DependencyRepo2>/
#     |...
echo "Content of ${HOME}:"
ls -l ${HOME}
